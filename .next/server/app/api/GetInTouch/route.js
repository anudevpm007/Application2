(()=>{var e={};e.id=968,e.ids=[968],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79428:e=>{"use strict";e.exports=require("buffer")},55511:e=>{"use strict";e.exports=require("crypto")},94735:e=>{"use strict";e.exports=require("events")},29021:e=>{"use strict";e.exports=require("fs")},91645:e=>{"use strict";e.exports=require("net")},21820:e=>{"use strict";e.exports=require("os")},33873:e=>{"use strict";e.exports=require("path")},19771:e=>{"use strict";e.exports=require("process")},27910:e=>{"use strict";e.exports=require("stream")},41204:e=>{"use strict";e.exports=require("string_decoder")},66136:e=>{"use strict";e.exports=require("timers")},34631:e=>{"use strict";e.exports=require("tls")},79551:e=>{"use strict";e.exports=require("url")},28354:e=>{"use strict";e.exports=require("util")},74075:e=>{"use strict";e.exports=require("zlib")},70816:(e,t,r)=>{"use strict";r.a(e,async(e,o)=>{try{r.r(t),r.d(t,{patchFetch:()=>c,routeModule:()=>p,serverHooks:()=>v,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>d});var s=r(42706),n=r(28203),a=r(45994),i=r(86332),l=e([i]);i=(l.then?(await l)():l)[0];let p=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/GetInTouch/route",pathname:"/api/GetInTouch",filename:"route",bundlePath:"app/api/GetInTouch/route"},resolvedPagePath:"C:\\GitHub\\website\\app\\api\\GetInTouch\\route.js",nextConfigOutput:"",userland:i}),{workAsyncStorage:u,workUnitAsyncStorage:d,serverHooks:v}=p;function c(){return(0,a.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:d})}o()}catch(e){o(e)}})},86332:(e,t,r)=>{"use strict";r.a(e,async(e,o)=>{try{r.r(t),r.d(t,{POST:()=>c});var s=r(60820),n=r(39187),a=r(64352),i=r(95482);r.n(i)().config(),console.log(process.env);let e=await s.createConnection({host:process.env.DATABASE_HOST,user:process.env.DATABASE_USER,database:process.env.DATABASE_NAME,password:process.env.DATABASE_PASSWORD});var l="";async function c(t){var r=0;try{var o="",s=await t.json();console.log(s);var i=s[1],c=s[2];if(console.log("email: ",i,", phone: ",c),c.length<5||c.length>=15)l="The entered number is wrong",o="P";else if(l="",o="",console.log("Output: ",i.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[a-zA-Z0-9]+\.[a-zA-Z]{2,}$/)),i.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[a-zA-Z0-9]+\.[a-zA-Z]{2,}$/)){if(a.A.map((e,t)=>{e===i.split("@")[1]&&(r+=1)}),0===r)try{console.log("Hello world");let[t,r]=await e.query("SELECT Phone, Email FROM registration;");console.log("from Db",t);var p=0,u=0;if(t.map((e,t)=>{e.Email===i&&(p+=1),e.Phone==c&&(u+=1)}),console.log("Phone: ",u,"Email: ",p),0==p&&0==u){console.log(l);try{var d="INSERT INTO `registration` ( `Name`, `Email`, `Phone`, `Company`, `Discreption`) VALUES ( '"+s[0]+"', '"+s[1]+"', '"+s[2]+"', '"+s[3]+"', '"+s[4]+"');";let[t,r]=await e.query(d);console.log(t),l="You are action update",o="C"}catch(e){o="C"}}else 0!==p?0!==u?(l="The entered Phone number and Email are already used",o="EP"):(l="The entered Email is already used",o="E"):0!==u&&(l="The entered Phone number is already used",o="P")}catch(e){console.log(e)}else l="This email is not acceptable",o="E"}else l="The entered Email is wrog",o="E";return n.NextResponse.json({status:l,Alpha:o})}catch(e){return console.log("Error"),n.NextResponse.json({status:404})}}o()}catch(e){o(e)}},1)},95482:(e,t,r)=>{let o=r(29021),s=r(33873),n=r(21820),a=r(55511),i=r(77336).version,l=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function c(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function p(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function u(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path))for(let r of e.path)o.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}else t=s.resolve(process.cwd(),".env.vault");return o.existsSync(t)?t:null}function d(e){return"~"===e[0]?s.join(n.homedir(),e.slice(1)):e}let v={configDotenv:function(e){let t;let r=s.resolve(process.cwd(),".env"),n="utf8",a=!!(e&&e.debug);e&&e.encoding?n=e.encoding:a&&c("No encoding is specified. UTF-8 is used by default");let i=[r];if(e&&e.path){if(Array.isArray(e.path))for(let t of(i=[],e.path))i.push(d(t));else i=[d(e.path)]}let l={};for(let r of i)try{let t=v.parse(o.readFileSync(r,{encoding:n}));v.populate(l,t,e)}catch(e){a&&c(`Failed to load ${r} ${e.message}`),t=e}let p=process.env;return(e&&null!=e.processEnv&&(p=e.processEnv),v.populate(p,l,e),t)?{parsed:l,error:t}:{parsed:l}},_configVault:function(e){console.log(`[dotenv@${i}][INFO] Loading env from encrypted .env.vault`);let t=v._parseVault(e),r=process.env;return e&&null!=e.processEnv&&(r=e.processEnv),v.populate(r,t,e),{parsed:t}},_parseVault:function(e){let t;let r=u(e),o=v.configDotenv({path:r});if(!o.parsed){let e=Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw e.code="MISSING_DATA",e}let s=p(e).split(","),n=s.length;for(let e=0;e<n;e++)try{let r=s[e].trim(),n=function(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let o=r.password;if(!o){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let s=r.searchParams.get("environment");if(!s){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let n=`DOTENV_VAULT_${s.toUpperCase()}`,a=e.parsed[n];if(!a){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:a,key:o}}(o,r);t=v.decrypt(n.ciphertext,n.key);break}catch(t){if(e+1>=n)throw t}return v.parse(t)},config:function(e){if(0===p(e).length)return v.configDotenv(e);let t=u(e);if(!t){var r;return r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${i}][WARN] ${r}`),v.configDotenv(e)}return v._configVault(e)},decrypt:function(e,t){let r=Buffer.from(t.slice(-64),"hex"),o=Buffer.from(e,"base64"),s=o.subarray(0,12),n=o.subarray(-16);o=o.subarray(12,-16);try{let e=a.createDecipheriv("aes-256-gcm",r,s);return e.setAuthTag(n),`${e.update(o)}${e.final()}`}catch(o){let e=o instanceof RangeError,t="Invalid key length"===o.message,r="Unsupported state or unable to authenticate data"===o.message;if(e||t){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw o}},parse:function(e){let t;let r={},o=e.toString();for(o=o.replace(/\r\n?/mg,"\n");null!=(t=l.exec(o));){let e=t[1],o=t[2]||"",s=(o=o.trim())[0];o=o.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===s&&(o=(o=o.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),r[e]=o}return r},populate:function(e,t,r={}){let o=!!(r&&r.debug),s=!!(r&&r.override);if("object"!=typeof t){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===s&&(e[r]=t[r]),o&&(!0===s?c(`"${r}" is already defined and WAS overwritten`):c(`"${r}" is already defined and was NOT overwritten`))):e[r]=t[r]}};e.exports.configDotenv=v.configDotenv,e.exports._configVault=v._configVault,e.exports._parseVault=v._parseVault,e.exports.config=v.config,e.exports.decrypt=v.decrypt,e.exports.parse=v.parse,e.exports.populate=v.populate,e.exports=v},77336:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.7","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,452,820,454],()=>r(70816));module.exports=o})();